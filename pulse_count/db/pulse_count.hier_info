|pulse_count
clk => clk.IN1
rst => rst.IN1
key => _.IN1
little_led[0] <= breath_led_and_led_test:B1.led[0]
little_led[1] <= breath_led_and_led_test:B1.led[1]
little_led[2] <= breath_led_and_led_test:B1.led[2]
little_led[3] <= breath_led_and_led_test:B1.led[3]
little_led[4] <= breath_led_and_led_test:B1.led[4]
little_led[5] <= breath_led_and_led_test:B1.led[5]
little_led[6] <= breath_led_and_led_test:B1.led[6]
little_led[7] <= breath_led_and_led_test:B1.led[7]
digit_seg[0] <= breath_led_and_led_test:B1.digit_seg[0]
digit_seg[1] <= breath_led_and_led_test:B1.digit_seg[1]
digit_seg[2] <= breath_led_and_led_test:B1.digit_seg[2]
digit_seg[3] <= breath_led_and_led_test:B1.digit_seg[3]
digit_seg[4] <= breath_led_and_led_test:B1.digit_seg[4]
digit_seg[5] <= breath_led_and_led_test:B1.digit_seg[5]
digit_seg[6] <= breath_led_and_led_test:B1.digit_seg[6]
digit_seg[7] <= breath_led_and_led_test:B1.digit_seg[7]
digit_cath[0] <= breath_led_and_led_test:B1.digit_cath[0]
digit_cath[1] <= breath_led_and_led_test:B1.digit_cath[1]


|pulse_count|breath_led_and_led_test:B1
sw[0] => sw[0].IN1
sw[1] => sw[1].IN1
sw[2] => sw[2].IN1
sw[3] => sw[3].IN1
sw[4] => sw[4].IN1
sw[5] => sw[5].IN1
sw[6] => sw[6].IN1
sw[7] => sw[7].IN1
clk => clk.IN1
real_rst => real_rst.IN1
led[0] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[1] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[2] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[3] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[4] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[5] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[6] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[7] <= led.DB_MAX_OUTPUT_PORT_TYPE
digit_seg[0] <= seg_scan:u2.digit_seg
digit_seg[1] <= seg_scan:u2.digit_seg
digit_seg[2] <= seg_scan:u2.digit_seg
digit_seg[3] <= seg_scan:u2.digit_seg
digit_seg[4] <= seg_scan:u2.digit_seg
digit_seg[5] <= seg_scan:u2.digit_seg
digit_seg[6] <= seg_scan:u2.digit_seg
digit_seg[7] <= seg_scan:u2.digit_seg
digit_cath[0] <= seg_scan:u2.digit_cath
digit_cath[1] <= seg_scan:u2.digit_cath


|pulse_count|breath_led_and_led_test:B1|seg_scan:u2
clk_50M => div_count[0].CLK
clk_50M => div_count[1].CLK
clk_50M => div_count[2].CLK
clk_50M => div_count[3].CLK
clk_50M => div_count[4].CLK
clk_50M => div_count[5].CLK
clk_50M => div_count[6].CLK
clk_50M => div_count[7].CLK
clk_50M => div_count[8].CLK
clk_50M => div_count[9].CLK
clk_50M => div_count[10].CLK
clk_50M => div_count[11].CLK
clk_50M => div_count[12].CLK
clk_50M => div_count[13].CLK
clk_50M => div_count[14].CLK
clk_50M => div_count[15].CLK
clk_50M => div_count[16].CLK
clk_50M => div_count[17].CLK
clk_50M => div_count[18].CLK
clk_50M => div_count[19].CLK
clk_50M => div_count[20].CLK
clk_50M => div_count[21].CLK
clk_50M => div_count[22].CLK
clk_50M => div_count[23].CLK
clk_50M => div_count[24].CLK
clk_50M => div_count[25].CLK
clk_50M => div_count[26].CLK
clk_50M => div_count[27].CLK
clk_50M => div_count[28].CLK
clk_50M => div_count[29].CLK
clk_50M => div_count[30].CLK
clk_50M => div_count[31].CLK
rst_button => segcath_holdtime.ACLR
rst_button => div_count[0].ACLR
rst_button => div_count[1].ACLR
rst_button => div_count[2].ACLR
rst_button => div_count[3].ACLR
rst_button => div_count[4].ACLR
rst_button => div_count[5].ACLR
rst_button => div_count[6].ACLR
rst_button => div_count[7].ACLR
rst_button => div_count[8].ACLR
rst_button => div_count[9].ACLR
rst_button => div_count[10].ACLR
rst_button => div_count[11].ACLR
rst_button => div_count[12].ACLR
rst_button => div_count[13].ACLR
rst_button => div_count[14].ACLR
rst_button => div_count[15].ACLR
rst_button => div_count[16].ACLR
rst_button => div_count[17].ACLR
rst_button => div_count[18].ACLR
rst_button => div_count[19].ACLR
rst_button => div_count[20].ACLR
rst_button => div_count[21].ACLR
rst_button => div_count[22].ACLR
rst_button => div_count[23].ACLR
rst_button => div_count[24].ACLR
rst_button => div_count[25].ACLR
rst_button => div_count[26].ACLR
rst_button => div_count[27].ACLR
rst_button => div_count[28].ACLR
rst_button => div_count[29].ACLR
rst_button => div_count[30].ACLR
rst_button => div_count[31].ACLR
switch[0] => digit[0].DATAA
switch[1] => digit[1].DATAA
switch[2] => digit[2].DATAA
switch[3] => digit[3].DATAA
switch[4] => digit[0].DATAB
switch[5] => digit[1].DATAB
switch[6] => digit[2].DATAB
switch[7] => digit[3].DATAB
digit_seg[0] <= <GND>
digit_seg[1] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
digit_seg[2] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
digit_seg[3] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
digit_seg[4] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
digit_seg[5] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
digit_seg[6] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
digit_seg[7] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
digit_cath[0] <= segcath_holdtime.DB_MAX_OUTPUT_PORT_TYPE
digit_cath[1] <= segcath_holdtime.DB_MAX_OUTPUT_PORT_TYPE


|pulse_count|debounce:u1
clk => key_sec_pre[0].CLK
clk => key_sec[0].CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => cnt[16].CLK
clk => cnt[17].CLK
clk => key_rst_pre[0].CLK
clk => key_rst[0].CLK
rst => key_sec_pre[0].PRESET
rst => key_sec[0].PRESET
rst => cnt[0].ACLR
rst => cnt[1].ACLR
rst => cnt[2].ACLR
rst => cnt[3].ACLR
rst => cnt[4].ACLR
rst => cnt[5].ACLR
rst => cnt[6].ACLR
rst => cnt[7].ACLR
rst => cnt[8].ACLR
rst => cnt[9].ACLR
rst => cnt[10].ACLR
rst => cnt[11].ACLR
rst => cnt[12].ACLR
rst => cnt[13].ACLR
rst => cnt[14].ACLR
rst => cnt[15].ACLR
rst => cnt[16].ACLR
rst => cnt[17].ACLR
rst => key_rst_pre[0].PRESET
rst => key_rst[0].PRESET
key[0] => key_rst[0].DATAIN
key[0] => key_sec[0].DATAIN
key_pulse[0] <= key_pulse.DB_MAX_OUTPUT_PORT_TYPE


